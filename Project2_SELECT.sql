/* Part C of Exhibit B (Ask professor about looking up contract associated with project) */
SELECT PROJECTNUMBER, PROJECTADDRESS, PROJECTDESCRIPTION FROM PROJECT Where PROJECTNUMBER = 'IL-SJB-335-005';


-- SELECT QUERY Data for EXHIBIT C - Part C -Detailed Pay Scale Breakdown for Regular Hours (Overtime =1.5 X the Basic Rate)
SELECT SKILLCODE, SKILLCLASSIFICATION, BASICHOURLYRATE, FRINGE, BASICHOURLYRATE + FRINGE
    AS Total_Compensation FROM SKILL ORDER BY SKILLID;

-- Exhibit D, Part D
-- 1 employee
-- Each skill
    -- Aggregate total hours
    -- Calculate gross
    -- Calculate total (rate + fringe)

-- Group by skill code
-- TODO: Verify that we can see all other skills codes for the employee
-- TODO: Show other employees. We only have one.
SELECT SSN, SKILLCODE, BASICHOURLYRATE, FRINGE, BASICHOURLYRATE + FRINGE AS TOTAL, SUM((ENDTIME-STARTTIME)*24) AS HOURS, (BASICHOURLYRATE + FRINGE) * SUM((ENDTIME-STARTTIME)*24) AS GROSSPAY
FROM EMPLOYEE
JOIN TIME_CARD ON EMPLOYEE.EMPLOYEEID = TIME_CARD.EMPLOYEEID
JOIN SKILL S on S.SKILLID = TIME_CARD.SKILLID
GROUP BY SSN, SKILLCODE, BASICHOURLYRATE, FRINGE;

-- Exhibit E
-- TODO: Update DOB date formatËš
SELECT SSN, LASTNAME, FIRSTNAME, MI, STREET, CITY, STATE, ZIP, PHONE, DOB, GENDER, MARITALSTATUS, EEOTYPE
FROM EMPLOYEE
WHERE EmployeeID = 1;

-- Exhibit F, Regular Pay
-- Project, Skill
CREATE VIEW REGULAR_TIME AS
SELECT TIMECARDID, SKILLID, EMPLOYEEID, PROJECTID, STARTTIME, ENDTIME, SUM((ENDTIME-STARTTIME)*24) AS HOURS FROM TIME_CARD;


SELECT PROJECTNAME, SKILLCODE, BASICHOURLYRATE, FRINGE, BASICHOURLYRATE + FRINGE AS TOTAL, SUM((ENDTIME-STARTTIME)*24) AS HOURS, (BASICHOURLYRATE + FRINGE) * SUM((ENDTIME-STARTTIME)*24) AS GROSSPAY
FROM EMPLOYEE
JOIN TIME_CARD ON EMPLOYEE.EMPLOYEEID = TIME_CARD.EMPLOYEEID
JOIN SKILL S on S.SKILLID = TIME_CARD.SKILLID
JOIN PROJECT P on TIME_CARD.PROJECTID = P.PROJECTID
GROUP BY PROJECTNAME, SKILLCODE, BASICHOURLYRATE, FRINGE;

CREATE VIEW DETAILED_TIMECARD AS
SELECT TIMECARDID, SKILLID, EMPLOYEEID, PROJECTID, STARTTIME, ENDTIME, TO_NUMBER(TO_CHAR(STARTTIME,'HH24')) AS START_HOUR, TO_NUMBER(TO_CHAR(ENDTIME,'HH24')) AS END_HOUR, (ENDTIME-STARTTIME)*24 AS HOURS
FROM TIME_CARD;

-- GET EVERYTHING THAT IS ACCUMULATES UP TO 40 HOURS DURING THE WEEK
SELECT TIMECARDID, SKILLID, EMPLOYEEID, PROJECTID, STARTTIME, ENDTIME, HOURS
FROM DETAILED_TIMECARD
WHERE EMPLOYEEID = 1;
